/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include "keymap_italian.h"

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk { release-after-ms = <4000>; };

&mt {
    tapping-term-ms = <160>;
    quick-tap-ms = <160>;
    require-prior-idle-ms = <80>;
    flavor = "balanced";
};

&lt {
    tapping-term-ms = <160>;
    quick-tap-ms = <160>;
    require-prior-idle-ms = <80>;
    flavor = "balanced";
};

&sl { release-after-ms = <4000>; };

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp N7 &kp N3 &kp N8 &kp N6 &kp N0 &kp DLLR &kp LS(K) &kp O &kp L &kp A>;
            label = "M0";
        };

        yanked_paste: yanked_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp N0 &kp P>;
            label = "YANKED_PASTE";
        };

        small_delete_paste: small_delete_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp MINUS &kp P>;
            label = "SMALL_DELETE_PASTE";
        };

        delete_1_paste: delete_1_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp N1 &kp P>;
            label = "DELETE_1_PASTE";
        };

        delete_2_paste: delete_2_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp N2 &kp P>;
            label = "DELETE_2_PASTE";
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys
        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow

        c0 {
            bindings = <&kp LCTRL>;
            key-positions = <10 19>;
            timeout-ms = <40>;
        };

        c1 {
            bindings = <&kp LEFT_ALT>;
            key-positions = <11 18>;
            timeout-ms = <40>;
        };

        c2 {
            bindings = <&kp LWIN>;
            key-positions = <12 17>;
            timeout-ms = <40>;
        };

        c3 {
            bindings = <&kp LSHIFT>;
            key-positions = <13 16>;
            timeout-ms = <40>;
        };

        c4 {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 9>;
        };

        c5 {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
            timeout-ms = <25>;
        };

        c6 {
            bindings = <&sk LSHIFT>;
            key-positions = <2 13>;
            timeout-ms = <30>;
        };

        c7 {
            bindings = <&kp CARET>;
            key-positions = <6 7>;
            timeout-ms = <25>;
        };

        c8 {
            bindings = <&kp DOLLAR>;
            key-positions = <7 8>;
            timeout-ms = <25>;
        };

        c9 {
            bindings = <&kp PAGE_UP>;
            key-positions = <3 4>;
        };

        c10 {
            bindings = <&sk RSHIFT>;
            key-positions = <7 16>;
            timeout-ms = <30>;
        };

        c11 {
            bindings = <&sl 1>;
            key-positions = <26 27>;
            timeout-ms = <30>;
        };

        c12 {
            bindings = <&sl 6>;
            key-positions = <27 28>;
            timeout-ms = <30>;
        };

        c13 {
            bindings = <&sl 1>;
            key-positions = <22 23>;
            timeout-ms = <30>;
        };

        c14 {
            bindings = <&sl 6>;
            key-positions = <21 22>;
            timeout-ms = <30>;
        };

        c15 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <1 2>;
            timeout-ms = <25>;
        };

        c16 {
            bindings = <&sl 4>;
            key-positions = <30 31>;
            timeout-ms = <60>;
        };

        c17 {
            bindings = <&kp LSHIFT>;
            key-positions = <32 33>;
            timeout-ms = <60>;
        };

        c18 {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <3 14>;
            timeout-ms = <30>;
        };

        c19 {
            bindings = <&kp DOLLAR>;
            key-positions = <14 24>;
            layers = <4>;
        };

        c20 {
            bindings = <&kp LESS_THAN>;
            key-positions = <23 30>;
            layers = <1>;
        };

        c21 {
            bindings = <&kp INSERT>;
            key-positions = <23 30>;
            layers = <6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            label = "Base";
            bindings = <
&kp Q        &kp W       &kp E       &kp R         &kp T      &kp Y        &kp U            &kp I       &kp O       &kp P
&mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHIFT F  &kp G      &kp H        &mt RSHIFT J     &mt RGUI K  &mt RALT L  &mt RCTRL SEMICOLON
&lt 3 Z      &kp X       &kp C       &kp V         &kp B      &kp N        &kp M            &kp COMMA   &kp DOT     &lt 5 SLASH
                                     &lt 1 SPACE   &lt 6 TAB  &lt 6 ENTER  &lt 1 BACKSPACE
            >;
        };

        // Numbers and high frequency symbols

        sym_layer {
            label = "SYM";
            bindings = <
&kp PERCENT    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp SQT           &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp HASH
&kp SEMICOLON  &kp COLON         &kp PERIOD      &kp COMMA             &kp GRAVE         &kp LEFT           &kp DOWN               &kp UP           &kp RIGHT          &kp AMPERSAND
&kp PLUS       &kp MINUS         &kp EQUAL       &kp ASTERISK          &kp SLASH         &kp BACKSLASH      &kp UNDERSCORE         &kp QUESTION     &kp EXCLAMATION    &kp AT_SIGN
                                                 &kp SPACE             &kp GREATER_THAN  &kp PIPE           &kp TILDE
            >;
        };

        // Main modifiers and arrow keys

        num_layer {
            label = "NUM";
            bindings = <
&kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &kp ASTERISK  &kp F1      &kp F2   &kp F3   &kp F4
&kp N0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp SLASH     &kp F5      &kp F6   &kp F7   &kp F8
&kp N0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL  &kp PERCENT   &kp F9      &kp F10  &kp F11  &kp F12
                                    &kp SPACE     &kp HOME   &kp END       &kp DELETE
            >;
        };

        // Function keys with modifiers

        left_hand_nav {
            label = "LHN";
            bindings = <
&trans  &trans          &trans          &trans         &trans           &m0     &yanked_paste  &small_delete_paste  &delete_1_paste  &delete_2_paste
&trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP   &msc SCRL_RIGHT  &trans  &trans         &trans               &trans           &trans
&trans  &kp LEFT        &kp DOWN        &kp UP         &kp RIGHT        &trans  &trans         &trans               &trans           &trans
                                        &kp BACKSPACE  &kp ENTER        &trans  &trans
            >;
        };

        // Low frequency symbols.

        left_hand_f {
            label = "LHF";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4      &kp CARET  &trans  &trans  &trans  &trans  &trans
&kp F5  &kp F6   &kp F7   &kp F8      &kp TILDE  &trans  &trans  &trans  &trans  &trans
&kp F9  &kp F10  &kp F11  &kp F12     &kp PIPE   &trans  &trans  &trans  &trans  &trans
                          &kp DELETE  &kp END    &trans  &trans
            >;
        };

        // Used to type regional accents.

        adjust_layer {
            label = "ADJ";
            bindings = <
&bootloader   &studio_unlock  &trans        &trans        &trans      &trans  &trans  &trans  &trans  &bootloader
&out OUT_TOG  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&sys_reset    &trans          &trans        &trans        &trans      &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans      &trans  &trans
            >;
        };

        NUM_LAYER_WORKING {
            label = "NUM_NEW";
            bindings = <
&kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &kp ASTERISK  &kp F1      &kp F2   &kp F3   &kp F4
&kp N0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp SLASH     &kp F5      &kp F6   &kp F7   &kp F8
&kp N0  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp EQUAL  &kp PERCENT   &kp F9      &kp F10  &kp F11  &kp F12
                                    &kp SPACE     &kp HOME   &kp END       &kp DELETE
            >;
        };

        // Used to change the keyboard's settings.
    };
};
